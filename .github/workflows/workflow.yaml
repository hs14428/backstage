name: 'Terraform workflow for gce instance creation'

on:
  pull_request:
    branches:
    - master

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: echo stuff
      run: |-
        echo ${{ github.ref_name }} &&
        echo ${{ github.ref }} &&
        echo ${{ github.event }} &&
        echo ${{ github.workflow }} &&
        echo ${{ github.workflow_ref }} &&
        echo ${{ github.base_ref }} &&
        echo ${{ github.head_ref }} &&
        echo ${{ github.path }} &&
        echo ${{ github.event_name }} &&
        
        

    - name: cd into gce folder
      if: ${{ contains(github.ref_name, 'gce') }}
      id: cd_gce
      run: cd gce

    - name: cd into gcs folder
      if: github.ref == 'refs/heads/gcs'
      id: cd_gcs
      run: cd gcs

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      # with:
        # terraform_version:

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      id: apply
      if: github.event_name == 'pull_request'
      run: terraform apply -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
